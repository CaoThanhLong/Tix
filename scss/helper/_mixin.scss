//----------MIXIN--------- (text, button, table, input)
@mixin container(
  $margin,
  $padding,
  $background: none,
  $border: none,
  $height: auto,
  $with: auto
) {
  height: $height;
  width: $with;
  margin: $margin;
  padding: $padding;
  border: $border;
  background: $background;
  @content;
}

@mixin text($fontSize, $color, $fontWeight) {
  font: {
    size: $fontSize;
    weight: $fontWeight;
  }
  color: $color;
}

@mixin icon($color, $fontSize, $margin: 0, $padding: 0, $border: none) {
  color: $color;
  font-size: $fontSize;
  margin: $margin;
  padding: $padding;
  border: $border;
  @content;
}

@mixin button(
  $fontSize,
  $fontWeight,
  $color,
  $backgroundColor,
  $borderColor,
  $colorHover,
  $backgroundColorHover,
  $borderColorHover,
  $boxshadowFocus,
  $margin,
  $padding
) {
  color: $color;
  font: {
    size: $fontSize;
    weight: $fontWeight;
  }
  margin: $margin;
  padding: $padding;
  background-color: $backgroundColor;
  border: 1px solid $borderColor;
  &:hover {
    color: $colorHover;
    background-color: $backgroundColorHover;
    border-color: $borderColorHover;
  }
  &:focus {
    box-shadow: $boxshadowFocus;
  }
}

// %standard-input {
//   background-color: $lightGrey;
//   border: 1px solid $lightGrey;
//   border-radius: 0;
//   margin: 0;
//   padding: spacing(1.2) spacing(1.2);
//   outline: none;
// }

// @mixin input {
//   @extend %standard-input;
//   @content;
// }

@mixin responsive-for($breakPoint) {
  @if map-has-key($map: $breakPoints, $key: $breakPoint) {
    $value: map-get(
      $map: $breakPoints,
      $key: $breakPoint,
    );
    @media screen and (max-width: $value) {
      @content;
    }
  } @else {
    @warn "breakPoint không tồn tại trong breakPoints";
  }
}

//------BREAK POINTS--------
$breakPoints: (
  "extra-large": 1200px,
  "large": 992px,
  "medium": 768px,
  "small": 576px,
  "extra-small": 420px,
);
